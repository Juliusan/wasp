// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

import * as wasmlib from "../wasmlib"
import * as sc from "./index";

export class MintSupplyCall {
    func: wasmlib.ScFunc = new wasmlib.ScFunc(sc.HScName, sc.HFuncMintSupply);
    params: sc.MutableMintSupplyParams = new sc.MutableMintSupplyParams();
}

export class MintSupplyContext {
    params: sc.ImmutableMintSupplyParams = new sc.ImmutableMintSupplyParams();
    state: sc.MutableTokenRegistryState = new sc.MutableTokenRegistryState();
}

export class TransferOwnershipCall {
    func: wasmlib.ScFunc = new wasmlib.ScFunc(sc.HScName, sc.HFuncTransferOwnership);
    params: sc.MutableTransferOwnershipParams = new sc.MutableTransferOwnershipParams();
}

export class TransferOwnershipContext {
    params: sc.ImmutableTransferOwnershipParams = new sc.ImmutableTransferOwnershipParams();
    state: sc.MutableTokenRegistryState = new sc.MutableTokenRegistryState();
}

export class UpdateMetadataCall {
    func: wasmlib.ScFunc = new wasmlib.ScFunc(sc.HScName, sc.HFuncUpdateMetadata);
    params: sc.MutableUpdateMetadataParams = new sc.MutableUpdateMetadataParams();
}

export class UpdateMetadataContext {
    params: sc.ImmutableUpdateMetadataParams = new sc.ImmutableUpdateMetadataParams();
    state: sc.MutableTokenRegistryState = new sc.MutableTokenRegistryState();
}

export class GetInfoCall {
    func: wasmlib.ScView = new wasmlib.ScView(sc.HScName, sc.HViewGetInfo);
    params: sc.MutableGetInfoParams = new sc.MutableGetInfoParams();
}

export class GetInfoContext {
    params: sc.ImmutableGetInfoParams = new sc.ImmutableGetInfoParams();
    state: sc.ImmutableTokenRegistryState = new sc.ImmutableTokenRegistryState();
}

export class ScFuncs {

    static mintSupply(ctx: wasmlib.ScFuncCallContext): MintSupplyCall {
        let f = new MintSupplyCall();
        f.func.setPtrs(f.params, null);
        return f;
    }

    static transferOwnership(ctx: wasmlib.ScFuncCallContext): TransferOwnershipCall {
        let f = new TransferOwnershipCall();
        f.func.setPtrs(f.params, null);
        return f;
    }

    static updateMetadata(ctx: wasmlib.ScFuncCallContext): UpdateMetadataCall {
        let f = new UpdateMetadataCall();
        f.func.setPtrs(f.params, null);
        return f;
    }

    static getInfo(ctx: wasmlib.ScViewCallContext): GetInfoCall {
        let f = new GetInfoCall();
        f.func.setPtrs(f.params, null);
        return f;
    }
}
