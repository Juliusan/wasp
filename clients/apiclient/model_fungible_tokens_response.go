/*
Wasp API

REST API for the Wasp node

API version: 0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the FungibleTokensResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FungibleTokensResponse{}

// FungibleTokensResponse struct for FungibleTokensResponse
type FungibleTokensResponse struct {
	// The base tokens (uint64 as string)
	BaseTokens string `json:"baseTokens"`
	NativeTokens map[string]string `json:"nativeTokens"`
}

// NewFungibleTokensResponse instantiates a new FungibleTokensResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFungibleTokensResponse(baseTokens string, nativeTokens map[string]string) *FungibleTokensResponse {
	this := FungibleTokensResponse{}
	this.BaseTokens = baseTokens
	this.NativeTokens = nativeTokens
	return &this
}

// NewFungibleTokensResponseWithDefaults instantiates a new FungibleTokensResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFungibleTokensResponseWithDefaults() *FungibleTokensResponse {
	this := FungibleTokensResponse{}
	return &this
}

// GetBaseTokens returns the BaseTokens field value
func (o *FungibleTokensResponse) GetBaseTokens() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BaseTokens
}

// GetBaseTokensOk returns a tuple with the BaseTokens field value
// and a boolean to check if the value has been set.
func (o *FungibleTokensResponse) GetBaseTokensOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseTokens, true
}

// SetBaseTokens sets field value
func (o *FungibleTokensResponse) SetBaseTokens(v string) {
	o.BaseTokens = v
}

// GetNativeTokens returns the NativeTokens field value
func (o *FungibleTokensResponse) GetNativeTokens() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.NativeTokens
}

// GetNativeTokensOk returns a tuple with the NativeTokens field value
// and a boolean to check if the value has been set.
func (o *FungibleTokensResponse) GetNativeTokensOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NativeTokens, true
}

// SetNativeTokens sets field value
func (o *FungibleTokensResponse) SetNativeTokens(v map[string]string) {
	o.NativeTokens = v
}

func (o FungibleTokensResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FungibleTokensResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["baseTokens"] = o.BaseTokens
	toSerialize["nativeTokens"] = o.NativeTokens
	return toSerialize, nil
}

type NullableFungibleTokensResponse struct {
	value *FungibleTokensResponse
	isSet bool
}

func (v NullableFungibleTokensResponse) Get() *FungibleTokensResponse {
	return v.value
}

func (v *NullableFungibleTokensResponse) Set(val *FungibleTokensResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFungibleTokensResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFungibleTokensResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFungibleTokensResponse(val *FungibleTokensResponse) *NullableFungibleTokensResponse {
	return &NullableFungibleTokensResponse{value: val, isSet: true}
}

func (v NullableFungibleTokensResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFungibleTokensResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


